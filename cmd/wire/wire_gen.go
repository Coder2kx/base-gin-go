// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"base-gin-go/config"
	"base-gin-go/infra/postgresql"
	"base-gin-go/infra/postgresql/repository"
	"base-gin-go/pkg/data"
	"base-gin-go/pkg/errors"
	"base-gin-go/pkg/jwt"
	"base-gin-go/pkg/password"
	stringPkg "base-gin-go/pkg/string"
	"base-gin-go/usecase/auth"
	"base-gin-go/usecase/product"
)

// Injectors from wire.go:

func InitApp(config2 *config.Environment, database *postgresql.Database) (App, error) {
	service := data.NewDataService()
	stringService := stringPkg.NewStringService()
	jwtService := jwt.NewJwtService(config2)
	passwordService := password.NewPasswordService()
	errorsService := errors.NewErrorService(config2)
	productRepository := repository.NewProductRepository(database, service)
	userRepository := repository.NewUserRepository(database, service)
	useCase := product.NewProductUseCase(productRepository, service, database)
	authUseCase := auth.NewAuthUseCase(config2, jwtService, passwordService, userRepository)
	app := newApp(service, stringService, jwtService, passwordService, errorsService, productRepository, userRepository, useCase, authUseCase)
	return app, nil
}
